name: Maven CI/CD

on:
  push:
    branches: 
      - '*'
    tags: [v*]
  workflow_dispatch:

jobs:
  build_and_coverage_report:
    runs-on: ubuntu-latest

    steps:
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch
      - uses: actions/checkout@v2
        with:
          ref: badges
          path: badges
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: "11"
          distribution: "temurin"
          cache: maven
      - name: Install test dependencies
        run: sudo apt-get -y -q --no-install-recommends install ffmpeg mediainfo tesseract-ocr tesseract-ocr-deu
      - name: Build with Maven
        run: mvn -B clean test

      - name: Generate JaCoCo Badge
        id: jacoco
        uses: cicirello/jacoco-badge-generator@v2
        with:
          generate-branches-badge: true
          jacoco-csv-file: >
            docs-core/target/site/jacoco/jacoco.csv
            docs-web/target/site/jacoco/jacoco.csv
            docs-web-common/target/site/jacoco/jacoco.csv

      - name: Log coverage percentage
        run: |
          echo "coverage = ${{ steps.jacoco.outputs.coverage }}"
          echo "branch coverage = ${{ steps.jacoco.outputs.branches }}"


      # - name: Commit the badge (if it changed)
      #   run: |
      #     if [[ `git status --porcelain` ]]; then
      #       git config --global user.name 'github-actions'
      #       git config --global user.email 'actions@github.com'
      #       git add .github/badges/*.svg
      #       git commit -m "Autogenerated JaCoCo coverage badge"
      #       git push
      #     fi


      
        # - uses: actions/checkout@v1
        #   with:
        #     ref: badges
        #     path: badges
      - name: Create badges dir if necessary
        env:
          BRANCH: ${{ steps.extract_branch.outputs.branch }}
          run: mkdir -p badges/${BRANCH}
      - name: Generate the badge SVG image
        uses: emibcn/badge-action@v1
        with:
          label: 'Test coverage'
          status: ${{ steps.coverage.outputs.lines }}
          color: 'blue,555,daf'
          path: badges/${{ steps.extract_branch.outputs.branch }}/badge.svg
      - name: Commit badge
        env:
          BRANCH: ${{ steps.extract_branch.outputs.branch }}
        run: |
          pushd badges
            git config --local user.email "action@github.com"
            git config --local user.name "GitHub Action"
            git add "${BRANCH}/badge.svg"
            git commit -m "Add/Update badge"
          popd
      - name: Push badge commit
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: badges
          directory: badges